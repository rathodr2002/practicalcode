import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten,Conv2D,MaxPooling2D
from sklearn import preprocessing 

(X_train,Y_train),(X_test,Y_test)=keras.datasets.mnist.load_data()

X_train.shape,Y_train.shape

X_test.shape,Y_test.shape

#normalize image
X_train=X_train/255.0
X_test=X_test/255.0

model=Sequential()
model.add(Conv2D(32,3,3,input_shape = (28,28,1),activation = 'relu'))
model.add(MaxPooling2D(pool_size= (2,2)))
model.add(Flatten())
model.add(Dense(64,activation='relu'))
model.add(Dense(34,activation='Softmax'))

model.summary()

model.compile(loss='mean_squared_error', optimizer='adam', metrics=['accuracy'])

model.fit(X_train,Y_train, epochs= 10, batch_size=7)

loss,accuracy=model.evaluate(X_test,Y_test)
